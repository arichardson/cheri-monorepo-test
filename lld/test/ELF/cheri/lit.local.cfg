import pprint
import subprocess

import lit.util

config.name = 'lld'
config.suffixes = ['.test', '.s', '.ll', '.c', '.cpp']

# print 'CHERI'

# from tools/clang/lit.cfg
def getClangBuiltinIncludeDir(clang):
    # FIXME: Rather than just getting the version, we should have clang print
    # out its resource dir here in an easy to scrape form.
    cmd = subprocess.Popen([clang, '-print-file-name=include'],
                           stdout=subprocess.PIPE,
                           env=config.environment)
    if not cmd.stdout:
      lit_config.fatal("Couldn't find the include dir for Clang ('%s')" % clang)
    dir = cmd.stdout.read().strip()
    if sys.platform in ['win32'] and execute_external:
        # Don't pass dosish path separator to msys bash.exe.
        dir = dir.replace('\\', '/')
    # Ensure the result is an ascii string, across Python2.5+ - Python3.
    return str(dir.decode('ascii'))

def add_sub(value, replacement):
  config.substitutions.append( (value, replacement) )

def add_invalid_sub(sub, replacement):
  add_sub(' ' + sub + ' ', """*** Do not use '%s' in tests, use '%s'. ***""" %
          (sub, replacement) )

config.lld = lit.util.which('ld.lld', config.llvm_tools_dir)
config.clang = lit.util.which('clang', config.llvm_tools_dir)
if config.clang:
    print 'Found clang:', config.clang
    config.available_features.add('clang')
    add_sub('%clang_cc1 ', '%s -cc1 -internal-isystem %s -nostdsysteminc ' %
            (config.clang, getClangBuiltinIncludeDir(config.clang)) )
    add_sub('%clangxx ', config.clang + ' --driver-mode=g++ ')
    add_sub('%clang_cheri_purecap ', config.clang + ' -nostdinc '
            '-target cheri-unknown-freebsd -msoft-float -mabi=purecap ')
    add_sub('%clang_link_purecap ', config.clang + ' -mabi=purecap '
            '-target cheri-unknown-freebsd -msoft-float -fuse-ld=' + config.lld +
            ' -nostdlib -Wl,-melf64btsmip_cheri_fbsd ')
    add_sub('%clang ', config.clang + ' ')
else:
    print 'Could not find clang -> skipping most CHERI linker tests!'
cheri_lld_cmd_base = config.lld + ' --eh-frame-hdr --enable-new-dtags -melf64btsmip_cheri_fbsd '
# TODO: do we still need --no-warn-mismatch?
add_sub('%cheri_lld_shlib', cheri_lld_cmd_base + '-Bshareable ')
add_sub('%cheri_lld_static', cheri_lld_cmd_base + '-Bstatic ')
add_sub('%cheri_lld_dynamic_exe', cheri_lld_cmd_base +
        '-dynamic-linker /libexec/ld-cheri-elf.so.1 ')

config.capsizefix = lit.util.which('capsizefix', config.llvm_tools_dir)
if config.capsizefix:
    print 'Found capsizefix:', config.capsizefix
    add_sub('%capsizefix ', config.capsizefix + ' ')

add_invalid_sub('clang', '%clang')
add_invalid_sub('clang\\+\\+', '%clangxx')
add_invalid_sub('clang -cc1', '%clang_cc1')

# print 'after: '
# pprint.pprint(vars(config))
